<launch>
  <arg name="mav_name" default="hummingbird"/>
  <arg name="world_name" default="plain_world"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="control_use_true_value" default="true"/>
  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <arg name="verbose" default="false"/>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find rotors_gazebo)/rviz/sim.rviz"/>
  <!--<node pkg="rotors_joy_interface" type="rotors_joy_interface" name="joy" output="screen"/>-->
  <include file="$(find aprilslam)/launch/sim_rotor.launch"></include>

  <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen" >
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" if="$(arg control_use_true_value)"/>
      <remap from="odometry" to="odometry_pub_frame" unless="$(arg control_use_true_value)"/>
    </node>

    <node name="joy_node" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="/dev/input/js0" />
    </node>
    <node name="joy_pose_interface" pkg="rotors_joy_interface" type="rotors_joy_pose_interface"  output="screen" >
    </node>
    <node name="joy_control" pkg="rotors_gazebo" type="joy_control" output="screen" >
    </node>

    <node name="transformation" pkg="rotors_utils" type="transformation" output="screen" >
      <param name="mag_sub_frame" value="magnetometer" />
      <param name="mag_pub_frame" value="mag" />
      <param name="image_sub_frame" value="camera_nadir/image_pos_vel" />
    </node>

     <node pkg="rotors_position_estimator" type="pose_estimation" name="position_estimation" output="screen" >
      <rosparam file="$(find rotors_position_estimator)/params/simulation.yaml" />
      <param name="nav_frame" value="/nav" />
      <!--<param name="base_frame" value="$(arg mav_name)/base_link" />-->
      <param name="publish_world_nav_transform" value="true" />
      <remap from="raw_imu" to="imu" />
      <remap from="fix" to="gps"/>
      <param name="tf_prefix" value=""/>
      <!--<remap from="/hummingbird/image_pos_vel" to="/hummingbird/camera_nadir/image_pos_vel" />-->
      <remap from="/hummingbird/image_pos_vel" to="/hummingbird/image_pub_frame" />
      <remap from="magnetic" to="mag" />
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <node pkg="rosbag" type="record"  name="record"  args="-o /home/zbf/Desktop/haha.bag  hummingbird/odometry_pub_frame  hummingbird/odometry_sensor1/odometry" output="screen"/>


</launch>
