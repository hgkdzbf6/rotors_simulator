<!-- this is for svo -->
<launch>

  <arg name="mav_name" default="hummingbird"/>
  <arg name="model_name" default="hummingbird"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="take_off_height" default="3" />
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.1"/>
  <arg name="control_use_true_value" default="false"/>
  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <arg name="verbose" default="false"/>

  <group ns="$(arg mav_name)">

    <include file="$(find svo_ros)/launch/test_uav.launch">
      <arg name="cam_topic" value="camera_nadir/image_raw" />
    </include>

    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <arg name="x" value="$(arg x)"/>
      <arg name="y" value="$(arg y)"/>
      <arg name="z" value="$(arg z)"/>
    </include>

    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen" >
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg model_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg model_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" if="$(arg control_use_true_value)"/>
      <remap from="odometry" to="odometry_pub_frame" unless="$(arg control_use_true_value)"/>
      <param name="take_off_height" value="$(arg take_off_height)-2" />
    </node>

    <node name="joy_node" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="/dev/input/js0" />
    </node>
    <node name="joy_pose_interface" pkg="rotors_joy_interface" type="rotors_joy_pose_interface"  output="screen" >
      <param name="take_off_height" value="$(arg take_off_height)" />
    </node>
    <node name="joy_control" pkg="rotors_gazebo" type="joy_control" output="screen" >
    </node>

    <node name="transformation" pkg="rotors_utils" type="transformation" output="screen" >
      <param name="mag_sub_frame" value="magnetometer" />
      <param name="mag_pub_frame" value="mag" />
      <param name="image_sub_frame" value="camera_nadir/image_pos_vel" />
    </node>

     <node pkg="rotors_position_estimator" type="pose_estimation" name="position_estimation" output="screen" >
      <rosparam file="$(find rotors_position_estimator)/params/simulation.yaml" />
      <param name="nav_frame" value="/nav" />
      <!--<param name="base_frame" value="$(arg mav_name)/base_link" />-->
      <param name="publish_world_nav_transform" value="true" />
      <remap from="raw_imu" to="imu" />
      <!--<remap from="fix" to="gps"/>-->
      <!--<remap from="poseupdate" to="svo/pose" />-->
      <!--<remap from="poseupdate" to="svo/fusion_pose" />-->
      <remap from="svo_image" to="svo/fusion_pose" />
      <param name="tf_prefix" value=""/>
      <!--<remap from="/hummingbird/image_pos_vel" to="/hummingbird/camera_nadir/image_pos_vel" />-->
      <remap from="image_pos_vel" to="image_pub_frame" />
      <remap from="magnetic" to="mag" />
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>
</launch>
